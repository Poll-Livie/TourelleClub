C51 COMPILER V9.60.0.0   DIRECTION                                                         11/10/2022 21:20:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DIRECTION
OBJECT MODULE PLACED IN .\drivers/direction.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.60\BIN\C51.
                    -exe /Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/drivers/direction.c OMF2 SMALL DEBUG OBJECTEX
                    -TEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Use
                    -rs/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/drivers;/Users/paul_leveque/Documents/10_Projets/EFM8
                    -BB1_PCA_Lib_8bitCenterPWM/inc;/Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/inc/config;/Applica
                    -tions/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//kits/common/bsp;/Applications/Simplicity Studio
                    -.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//kits/EFM8BB1_LCK/config;/Applications/Simplicity Studio.app/Contents/E
                    -clipse/developer/sdks/8051/v4.2.4//Lib/efm8_assert;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8
                    -051/v4.2.4//Device/EFM8BB1/peripheral_driver/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/805
                    -1/v4.2.4//Device/shared/si8051Base;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//Devi
                    -ce/EFM8BB1/inc) PRINT(.\drivers/direction.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\drivers/direction.OBJ)

line level    source

   1          /*
   2           * direction.c
   3           *
   4           *  Created on: 10 nov. 2022
   5           *      Author: paul_leveque
   6           */
   7          
   8          #include "direction.h"
   9          
  10          // Permet d'aller dans la direction voulue :
  11          // void go_direction(tank_direction maDirection);
  12          
  13          // Permet d'avancer a une vitesse donnée (valeur a mettre dans le PWM)
  14          void go_forward(uint8_t speed){
  15   1        if ((PCA0CPM0 & PCA0CPM0_ECOM__BMASK) == PCA0CPM0_ECOM__DISABLED)
  16   1        {
  17   2          PCA0CPM0 |= PCA0CPM0_ECOM__BMASK;   // Set ECOM0 if it is '0'
  18   2        }
  19   1        PCA0_writeChannel(PCA0_CHAN0, speed << 8);
  20   1      
  21   1        if ((PCA0CPM1 & PCA0CPM1_ECOM__BMASK) == PCA0CPM1_ECOM__DISABLED)
  22   1        {
  23   2          PCA0CPM1 |= PCA0CPM1_ECOM__BMASK;   // Set ECOM1 if it is '0'
  24   2        }
  25   1        PCA0_writeChannel(PCA0_CHAN1, speed << 8);
  26   1      
  27   1        // + set pins IN(1:4) low or high accordingly
  28   1      
  29   1      }
  30          
  31          // Permet de reculer a une vitesse donnée (valeur a mettre dans le PWM)
  32          void go_backwards(uint8_t speed){
  33   1        PCA0_writeChannel(PCA0_CHAN0, speed << 8);
  34   1        PCA0_writeChannel(PCA0_CHAN1, speed << 8);
  35   1        // + set pins IN(1:4) low or high accordingly
  36   1      
  37   1      }
  38          
  39          // Permet de tourner a droite a une vitesse donnée (valeur a mettre dans le PWM)
  40          void turn_right(uint8_t speed){
  41   1        PCA0_writeChannel(PCA0_CHAN0, speed << 8);
  42   1        PCA0_writeChannel(PCA0_CHAN1, speed << 8);
  43   1        // + set pins IN(1:4) low or high accordingly
  44   1      
  45   1      }
  46          
C51 COMPILER V9.60.0.0   DIRECTION                                                         11/10/2022 21:20:28 PAGE 2   

  47          // Permet de tourner a gauche a une vitesse donnée (valeur a mettre dans le PWM)
  48          void turn_left(uint8_t speed){
  49   1        PCA0_writeChannel(PCA0_CHAN0, speed << 8);
  50   1        PCA0_writeChannel(PCA0_CHAN1, speed << 8);
  51   1        // + set pins IN(1:4) low or high accordingly
  52   1      
  53   1      }
  54          
  55          // permet d'arreter les moteurs
  56          void stop(){
  57   1        PCA0CPM0 &= ~PCA0CPM0_ECOM__BMASK;  // Clear ECOM0
  58   1        PCA0CPM1 &= ~PCA0CPM1_ECOM__BMASK;  // Clear ECOM0
  59   1        // + set pins IN(1:4) low or high accordingly
  60   1      
  61   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    110    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
