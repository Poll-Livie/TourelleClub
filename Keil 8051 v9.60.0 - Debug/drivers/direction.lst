C51 COMPILER V9.60.0.0   DIRECTION                                                         11/14/2022 14:47:17 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DIRECTION
OBJECT MODULE PLACED IN .\drivers/direction.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.60\BIN\C51.
                    -exe /Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/drivers/direction.c OMF2 SMALL DEBUG OBJECTEX
                    -TEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Use
                    -rs/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/inc;/Users/paul_leveque/Documents/10_Projets/EFM8BB1_
                    -PCA_Lib_8bitCenterPWM/inc/config;/Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/drivers;/Applica
                    -tions/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//Lib/efm8_assert;/Applications/Simplicity Studio
                    -.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//Device/shared/si8051Base;/Applications/Simplicity Studio.app/Contents/
                    -Eclipse/developer/sdks/8051/v4.2.4//Device/EFM8BB1/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sd
                    -ks/8051/v4.2.4//kits/common/bsp;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//kits/EF
                    -M8BB1_LCK/config;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//Device/EFM8BB1/periphe
                    -ral_driver/inc) PRINT(.\drivers/direction.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\drivers/direction.OBJ)

line level    source

   1          /*
   2           * direction.c
   3           *
   4           *  Created on: 10 nov. 2022
   5           *      Author: paul_leveque
   6           */
   7          
   8          #include <SI_EFM8BB1_Register_Enums.h>
   9          #include "pca_0.h"
  10          #include "direction.h"
  11          
  12          // Permet d'aller dans la direction voulue :
  13          // void go_direction(tank_direction maDirection);
  14          
  15          void init_portsIn(void){
  16   1        P1MDOUT |= P1MDOUT_B0__PUSH_PULL| P1MDOUT_B1__PUSH_PULL | P1MDOUT_B2__PUSH_PULL
  17   1            | P1MDOUT_B3__PUSH_PULL;
  18   1        // Set Pins P1.0 to P1.3 as Output for controlling IN 1,2,3,4 ;
  19   1      }
  20          
  21          
  22          // Permet d'avancer a une vitesse donnée (valeur a mettre dans le PWM)
  23          void go_forward(uint8_t speed){
  24   1        // TODO Ajouter le changement de valeur des ports
  25   1        P1 |=   0x0A;   // 1010
  26   1        P1 &=  ~0x05;   // 0101
  27   1      
  28   1        if ((PCA0CPM0 & PCA0CPM0_ECOM__BMASK) == PCA0CPM0_ECOM__DISABLED)
  29   1        {
  30   2          PCA0CPM0 |= PCA0CPM0_ECOM__BMASK;   // Set ECOM0 if it is '0'
  31   2        }
  32   1        else {
  33   2          PCA0_writeChannel(PCA0_CHAN0, speed << 8);
  34   2        }
  35   1      
  36   1        if ((PCA0CPM1 & PCA0CPM1_ECOM__BMASK) == PCA0CPM1_ECOM__DISABLED)
  37   1        {
  38   2          PCA0CPM1 |= PCA0CPM1_ECOM__BMASK;   // Set ECOM1 if it is '0'
  39   2        }
  40   1        else {
  41   2          PCA0_writeChannel(PCA0_CHAN1, speed << 8);
  42   2        }
  43   1      
  44   1        // + set pins IN(1:4) low or high accordingly
  45   1      
  46   1      }
C51 COMPILER V9.60.0.0   DIRECTION                                                         11/14/2022 14:47:17 PAGE 2   

  47          
  48          // Permet de reculer a une vitesse donnée (valeur a mettre dans le PWM)
  49          void go_backward(uint8_t speed){
  50   1      
  51   1        P1 |=   0x05;   // 0101
  52   1        P1 &=  ~0x0A;   // 1010
  53   1      
  54   1        if ((PCA0CPM0 & PCA0CPM0_ECOM__BMASK) == PCA0CPM0_ECOM__DISABLED)
  55   1        {
  56   2          PCA0CPM0 |= PCA0CPM0_ECOM__BMASK;   // Set ECOM0 if it is '0'
  57   2        }
  58   1        else {
  59   2          PCA0_writeChannel(PCA0_CHAN0, speed << 8);
  60   2        }
  61   1      
  62   1        if ((PCA0CPM1 & PCA0CPM1_ECOM__BMASK) == PCA0CPM1_ECOM__DISABLED)
  63   1        {
  64   2          PCA0CPM1 |= PCA0CPM1_ECOM__BMASK;   // Set ECOM1 if it is '0'
  65   2        }
  66   1        else {
  67   2          PCA0_writeChannel(PCA0_CHAN1, speed << 8);
  68   2        }
  69   1        // + set pins IN(1:4) low or high accordingly
  70   1      
  71   1      }
  72          
  73          // Permet de tourner a droite a une vitesse donnée (valeur a mettre dans le PWM)
  74          void turn_right(uint8_t speed){
  75   1        P1 |=   0x06;   // 0110
  76   1        P1 &=  ~0x09;   // 1001
  77   1      
  78   1        if ((PCA0CPM0 & PCA0CPM0_ECOM__BMASK) == PCA0CPM0_ECOM__DISABLED)
  79   1        {
  80   2          PCA0CPM0 |= PCA0CPM0_ECOM__BMASK;   // Set ECOM0 if it is '0'
  81   2        }
  82   1        else {
  83   2          PCA0_writeChannel(PCA0_CHAN0, speed << 8);
  84   2        }
  85   1      
  86   1        if ((PCA0CPM1 & PCA0CPM1_ECOM__BMASK) == PCA0CPM1_ECOM__DISABLED)
  87   1        {
  88   2          PCA0CPM1 |= PCA0CPM1_ECOM__BMASK;   // Set ECOM1 if it is '0'
  89   2        }
  90   1        else {
  91   2          PCA0_writeChannel(PCA0_CHAN1, speed << 8);
  92   2        }
  93   1        // + set pins IN(1:4) low or high accordingly
  94   1      
  95   1      }
  96          
  97          // Permet de tourner a gauche a une vitesse donnée (valeur a mettre dans le PWM)
  98          void turn_left(uint8_t speed){
  99   1        P1 |=   0x09;   // 1001
 100   1        P1 &=  ~0x06;   // 0110
 101   1      
 102   1        if ((PCA0CPM0 & PCA0CPM0_ECOM__BMASK) == PCA0CPM0_ECOM__DISABLED)
 103   1        {
 104   2          PCA0CPM0 |= PCA0CPM0_ECOM__BMASK;   // Set ECOM0 if it is '0'
 105   2        }
 106   1        else {
 107   2          PCA0_writeChannel(PCA0_CHAN0, speed << 8);
 108   2        }
 109   1      
C51 COMPILER V9.60.0.0   DIRECTION                                                         11/14/2022 14:47:17 PAGE 3   

 110   1        if ((PCA0CPM1 & PCA0CPM1_ECOM__BMASK) == PCA0CPM1_ECOM__DISABLED)
 111   1        {
 112   2          PCA0CPM1 |= PCA0CPM1_ECOM__BMASK;   // Set ECOM1 if it is '0'
 113   2        }
 114   1        else {
 115   2          PCA0_writeChannel(PCA0_CHAN1, speed << 8);
 116   2        }
 117   1        // + set pins IN(1:4) low or high accordingly
 118   1      
 119   1      }
 120          
 121          // permet d'arreter les moteurs
 122          void stop(){
 123   1        PCA0CPM0 &= ~PCA0CPM0_ECOM__BMASK;  // Clear ECOM0
 124   1        PCA0CPM1 &= ~PCA0CPM1_ECOM__BMASK;  // Clear ECOM0
 125   1        // + set pins IN(1:4) low or high accordingly
 126   1      
 127   1      }
 128          
 129          void test_moteur(void){
 130   1        uint16_t delay_count;               // Used to implement a delay
 131   1        uint8_t duty_direction0 = 1;        // Module 0: 0 = Decrease; 1 = Increase
 132   1        bool duty_direction1 = 0;           // Module 1: 0 = Increase; 1 = Decrease
 133   1      
 134   1        uint8_t duty_cycle0 = 0x80;
 135   1        uint8_t duty_cycle1 = 0xFF;
 136   1        for (delay_count = 30000; delay_count > 0; delay_count--);
 137   1      
 138   1        if (duty_direction1 == 1 ){
 139   2            duty_cycle0 = duty_cycle0 + duty_direction0;
 140   2            go_backward(duty_cycle0);
 141   2      
 142   2            if (duty_cycle0 == 0x2F) {
 143   3                duty_direction0 = -1;
 144   3                duty_direction1 = 0;
 145   3            }
 146   2            if (duty_cycle0 == 0x00) {
 147   3                duty_direction0 = 1;
 148   3            }
 149   2        }
 150   1        else {
 151   2            duty_cycle0 = duty_cycle0 + duty_direction0;
 152   2            go_forward(duty_cycle0);
 153   2      
 154   2            if (duty_cycle0 == 0x2F) {
 155   3                duty_direction0 = -1;
 156   3                duty_direction1 = 1;
 157   3            }
 158   2            if (duty_cycle0 == 0x00) {
 159   3                duty_direction0 = 1;
 160   3            }
 161   2        }
 162   1      }
 163          
 164          void analyseCommandFromRaspberry(void){
 165   1        switch (dataFromRaspberry.buffereData[0]) {
 166   2          case FORWARD_PROTOCOL_VAL:
*** ERROR C220 IN LINE 166 OF /Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/drivers/direction.c
             -: illegal constant expression
 167   2            dataFromRaspberry.orderedDirection = forward;
 168   2            dataFromRaspberry.speed = dataFromRaspberry.buffereData[1];
 169   2            break;
 170   2          case BACKWARD_PROTOCOL_VAL:
C51 COMPILER V9.60.0.0   DIRECTION                                                         11/14/2022 14:47:17 PAGE 4   

*** ERROR C220 IN LINE 170 OF /Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/drivers/direction.c
             -: illegal constant expression
 171   2            dataFromRaspberry.orderedDirection = backward;
 172   2            dataFromRaspberry.speed = dataFromRaspberry.buffereData[1];
 173   2            break;
 174   2          case TURN_LEFT_PROTOCOL_VAL:
*** ERROR C220 IN LINE 174 OF /Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/drivers/direction.c
             -: illegal constant expression
 175   2            dataFromRaspberry.orderedDirection = turnLeft;
 176   2            dataFromRaspberry.speed = dataFromRaspberry.buffereData[1];
 177   2            break;
 178   2          case TURN_RIGHT_PROTOCOL_VAL:
*** ERROR C220 IN LINE 178 OF /Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/drivers/direction.c
             -: illegal constant expression
 179   2            dataFromRaspberry.orderedDirection = turnRight;
 180   2            dataFromRaspberry.speed = dataFromRaspberry.buffereData[1];
 181   2            break;
 182   2          default:
 183   2            break;
 184   2        }
 185   1      }
 186          

C51 COMPILATION COMPLETE.  0 WARNING(S),  4 ERROR(S)
