C51 COMPILER V9.60.0.0   TOURELLECHARIOT                                                   11/17/2022 14:51:55 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TOURELLECHARIOT
OBJECT MODULE PLACED IN .\src/TourelleChariot.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.60\BIN\C51.
                    -exe /Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/src/TourelleChariot.c OMF2 SMALL DEBUG OBJECT
                    -EXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/U
                    -sers/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/inc;/Users/paul_leveque/Documents/10_Projets/EFM8BB
                    -1_PCA_Lib_8bitCenterPWM/inc/config;/Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/drivers;/Appli
                    -cations/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//Lib/efm8_assert;/Applications/Simplicity Stud
                    -io.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//Device/shared/si8051Base;/Applications/Simplicity Studio.app/Content
                    -s/Eclipse/developer/sdks/8051/v4.2.4//Device/EFM8BB1/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/
                    -sdks/8051/v4.2.4//kits/common/bsp;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//kits/
                    -EFM8BB1_LCK/config;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//Device/EFM8BB1/perip
                    -heral_driver/inc) PRINT(.\src/TourelleChariot.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/TourelleChariot.OBJ)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // PCA_Lib_8bitCenterPWM.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2014 Silicon Laboratories, Inc.
   5          // http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   6          //
   7          // Program Description:
   8          //
   9          // This program sends two center-aligned PWM waveforms out of two I/O pins
  10          // using the PCA's 8-bit Center-Aligned PWM Output Mode. The duty cycles of
  11          // the waveforms are modified periodically within the main loop, and the
  12          // waveforms are increasing/decreasing opposite of each other.
  13          //
  14          // In this example, PCA Modules 0 and 1 are used to generate the waveforms, and
  15          // the crossbar is configured to send the CEX0 signal out on P1.4 and the CEX1
  16          // signal out on P1.5.
  17          //
  18          // Resources:
  19          //   SYSCLK - 24.5 MHz HFOSC / 1
  20          //   PCA    - 8-bit PWM
  21          //   P0.0   - SPI SCK
  22          //   P0.1   - SPI MISO
  23          //   P0.2   - SPI MOSI
  24          //   P0.3   - SPI NSS
  25          //   UART0  - 115200 baud, 8-N-1
  26          //   Timer1 - UART0 clock source
  27          //   P0.4   - UART0 TX
  28          //   P0.5   - UART0 RX
  29          //   P1.4   - PCA CEX0 / LED
  30          //
  31          //-----------------------------------------------------------------------------
  32          // How To Test: EFM8BB1 LCK
  33          //-----------------------------------------------------------------------------
  34          // 1) Connect the EFM8BB1 LCK board to a PC using a micro USB cable.
  35          // 2) Compile and download code to the EFM8BB1 LCK board.
  36          //    In Simplicity Studio IDE, select Run -> Debug from the menu bar,
  37          //    click the Debug button in the quick menu, or press F11.
  38          // 3) Run the code.
  39          //    In Simplicity Studio IDE, select Run -> Resume from the menu bar,
  40          //    click the Resume button in the quick menu, or press F8.
  41          // 4) Place an oscilloscope probe on P1.4 and P1.5.
  42          // 5) Verify that the duty cycle of the waveforms vary smoothly between
  43          //    minimum and maximum values.
  44          //
  45          // Target:         EFM8BB1
  46          // Tool chain:     Generic
C51 COMPILER V9.60.0.0   TOURELLECHARIOT                                                   11/17/2022 14:51:55 PAGE 2   

  47          //
  48          // Release 0.1 (ST)
  49          //    - Initial Revision
  50          //    - 10 OCT 2014
  51          //
  52          
  53          //-----------------------------------------------------------------------------
  54          // Includes
  55          //-----------------------------------------------------------------------------
  56          #include "bsp.h"
  57          #include "InitDevice.h"
  58          
  59          /*
  60           * #include "SPI0_Lib_Slave.h"
  61           * #include "spi_0.h"
  62           * #include <string.h>
  63           *
  64           */
  65          #include "uart_0.h"
  66          
  67          #include "pca_0.h"
  68          
  69          #include "direction.h"
  70          
  71          //-----------------------------------------------------------------------------
  72          // Global Constants
  73          //-----------------------------------------------------------------------------
  74          #define BUFFER_LENGTH   4
  75          
  76          //-----------------------------------------------------------------------------
  77          // Global Variables
  78          //-----------------------------------------------------------------------------
  79          SI_SEGMENT_VARIABLE(buffer[BUFFER_LENGTH], uint8_t, SI_SEG_XDATA);
  80          
  81          tourelle_uart_protocol dataFromRaspberry;
  82          
  83          //-----------------------------------------------------------------------------
  84          // SiLabs_Startup() Routine
  85          // ----------------------------------------------------------------------------
  86          // This function is called immediately after reset, before the initialization
  87          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  88          // useful place to disable the watchdog timer, which is enable by default
  89          // and may trigger before main() in some instances.
  90          //-----------------------------------------------------------------------------
  91          void SiLabs_Startup (void)
  92          {
  93   1        // Disable the watchdog here
  94   1      }
  95          
  96          //-----------------------------------------------------------------------------
  97          // Main Routine
  98          //-----------------------------------------------------------------------------
  99          void main(void)
 100          {
 101   1        // uint8_t command;
 102   1        volatile uint16_t delay_counter = 0;
 103   1        volatile uint16_t delay_counter2 = 0;
 104   1        enter_DefaultMode_from_RESET();
 105   1        UART0_init(UART0_RX_ENABLE, UART0_WIDTH_8, UART0_MULTIPROC_DISABLE);
 106   1      
 107   1        init_portsIn();
 108   1        IE_EA = 1;
 109   1      
C51 COMPILER V9.60.0.0   TOURELLECHARIOT                                                   11/17/2022 14:51:55 PAGE 3   

 110   1        while (1)
 111   1          {
 112   2            if ((UART0_rxBytesRemaining() == 0) && (UART0_txBytesRemaining() == 0))
 113   2            {
 114   3               UART0_readBuffer(buffer, BUFFER_LENGTH);
 115   3            }
 116   2      
 117   2            // Switch
 118   2            if (dataFromRaspberry.bufferedData[0] != 0){
 119   3              switch (dataFromRaspberry.bufferedData[0]) {
 120   4                case FORWARD_PROTOCOL_LETTER:
 121   4                  go_forward(dataFromRaspberry.bufferedData[1]);
 122   4                  for (delay_counter2 = 0; delay_counter2 < 100; ++delay_counter2)
 123   4                      for (delay_counter = 0; delay_counter < 20000; ++delay_counter);
 124   4                  break;
 125   4                case BACKWARD_PROTOCOL_LETTER:
 126   4                  go_backward(dataFromRaspberry.bufferedData[1]);
 127   4                  for (delay_counter = 0; delay_counter < 20000; ++delay_counter);
 128   4                  break;
 129   4                case TURN_LEFT_PROTOCOL_LETTER:
 130   4                  turn_left(dataFromRaspberry.bufferedData[1]);
 131   4                  for (delay_counter = 0; delay_counter < 20000; ++delay_counter);
 132   4                  break;
 133   4                case TURN_RIGHT_PROTOCOL_LETTER:
 134   4                  turn_right(dataFromRaspberry.bufferedData[1]);
 135   4                  for (delay_counter = 0; delay_counter < 20000; ++delay_counter);
 136   4                  break;
 137   4                default:
 138   4                  break;
 139   4              }
 140   3              dataFromRaspberry.bufferedData[0] = 0;
 141   3              dataFromRaspberry.bufferedData[1] = 0;
 142   3            }
 143   2            else {
 144   3                stop();
 145   3            }
 146   2      
 147   2          }
 148   1      }
 149          
 150          
 151          //-----------------------------------------------------------------------------
 152          // UART ISR Callbacks
 153          //-----------------------------------------------------------------------------
 154          void UART0_receiveCompleteCb()
 155          {
 156   1         uint8_t i;
 157   1         unsigned char byte;
 158   1      
 159   1      
 160   1      
 161   1         for (i = 0; i<BUFFER_LENGTH; i++)
 162   1         {
 163   2            byte = buffer[i];
 164   2      
 165   2            /*
 166   2             * Place to put Command Analysis
 167   2             */
 168   2            // Take only first and second value received
 169   2            if (i == 0 || i == 1){
 170   3                dataFromRaspberry.bufferedData[i] = (uint8_t)byte;
 171   3            }
 172   2      
C51 COMPILER V9.60.0.0   TOURELLECHARIOT                                                   11/17/2022 14:51:55 PAGE 4   

 173   2            buffer[i] = byte;
 174   2         }
 175   1         UART0_writeBuffer(buffer, BUFFER_LENGTH);
 176   1         // analyseCommandFromRaspberry();
 177   1      }
 178          
 179          void UART0_transmitCompleteCb ()
 180          {
 181   1      }
 182          
 183          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    293    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
