C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/14/2022 19:42:30 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.60\BIN\C51.
                    -exe /Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEN
                    -D ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Users/
                    -paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/inc;/Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA
                    -_Lib_8bitCenterPWM/inc/config;/Users/paul_leveque/Documents/10_Projets/EFM8BB1_PCA_Lib_8bitCenterPWM/drivers;/Applicatio
                    -ns/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//Lib/efm8_assert;/Applications/Simplicity Studio.ap
                    -p/Contents/Eclipse/developer/sdks/8051/v4.2.4//Device/shared/si8051Base;/Applications/Simplicity Studio.app/Contents/Ecl
                    -ipse/developer/sdks/8051/v4.2.4//Device/EFM8BB1/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/
                    -8051/v4.2.4//kits/common/bsp;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//kits/EFM8B
                    -B1_LCK/config;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.2.4//Device/EFM8BB1/peripheral
                    -_driver/inc) PRINT(.\src/InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PORTS_0_enter_DefaultMode_from_RESET ();
  28   1        PORTS_1_enter_DefaultMode_from_RESET ();
  29   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  30   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  31   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  32   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  33   1        PCA_0_enter_DefaultMode_from_RESET ();
  34   1        PCACH_0_enter_DefaultMode_from_RESET ();
  35   1        PCACH_1_enter_DefaultMode_from_RESET ();
  36   1        UART_0_enter_DefaultMode_from_RESET ();
  37   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  38   1        // [Config Calls]$
  39   1      
  40   1      }
  41          
  42          //================================================================================
  43          // WDT_0_enter_DefaultMode_from_RESET
  44          //================================================================================
  45          extern void
  46          WDT_0_enter_DefaultMode_from_RESET (void)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/14/2022 19:42:30 PAGE 2   

  47          {
  48   1        // $[Watchdog Timer Init Variable Declarations]
  49   1        uint32_t i;
  50   1        bool ea;
  51   1        // [Watchdog Timer Init Variable Declarations]$
  52   1      
  53   1        // $[WDTCN - Watchdog Timer Control]
  54   1        // Deprecated
  55   1        // [WDTCN - Watchdog Timer Control]$
  56   1      
  57   1        // $[WDTCN_2 - Watchdog Timer Control]
  58   1      
  59   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  60   1        WDTCN = 0xA5;
  61   1      
  62   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  63   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  64   1          {
  65   2            NOP ();
  66   2          }
  67   1      
  68   1        // Disable WDT
  69   1        ea = IE_EA;
  70   1        IE_EA = 0;
  71   1        WDTCN = 0xDE;
  72   1        WDTCN = 0xAD;
  73   1        IE_EA = ea;
  74   1      
  75   1        // [WDTCN_2 - Watchdog Timer Control]$
  76   1      
  77   1      }
  78          
  79          //================================================================================
  80          // PORTS_0_enter_DefaultMode_from_RESET
  81          //================================================================================
  82          extern void
  83          PORTS_0_enter_DefaultMode_from_RESET (void)
  84          {
  85   1        // $[P0 - Port 0 Pin Latch]
  86   1        // [P0 - Port 0 Pin Latch]$
  87   1      
  88   1        // $[P0MDOUT - Port 0 Output Mode]
  89   1        /***********************************************************************
  90   1         - P0.0 output is open-drain
  91   1         - P0.1 output is push-pull
  92   1         - P0.2 output is open-drain
  93   1         - P0.3 output is open-drain
  94   1         - P0.4 output is push-pull
  95   1         - P0.5 output is open-drain
  96   1         - P0.6 output is open-drain
  97   1         - P0.7 output is open-drain
  98   1         ***********************************************************************/
  99   1        P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__PUSH_PULL
 100   1            | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN | P0MDOUT_B4__PUSH_PULL
 101   1            | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__OPEN_DRAIN
 102   1            | P0MDOUT_B7__OPEN_DRAIN;
 103   1        // [P0MDOUT - Port 0 Output Mode]$
 104   1      
 105   1        // $[P0MDIN - Port 0 Input Mode]
 106   1        // [P0MDIN - Port 0 Input Mode]$
 107   1      
 108   1        // $[P0SKIP - Port 0 Skip]
 109   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/14/2022 19:42:30 PAGE 3   

 110   1         - P0.0 pin is skipped by the crossbar
 111   1         - P0.1 pin is skipped by the crossbar
 112   1         - P0.2 pin is skipped by the crossbar
 113   1         - P0.3 pin is skipped by the crossbar
 114   1         - P0.4 pin is not skipped by the crossbar
 115   1         - P0.5 pin is not skipped by the crossbar
 116   1         - P0.6 pin is skipped by the crossbar
 117   1         - P0.7 pin is skipped by the crossbar
 118   1         ***********************************************************************/
 119   1        P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 120   1            | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 121   1            | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 122   1        // [P0SKIP - Port 0 Skip]$
 123   1      
 124   1        // $[P0MASK - Port 0 Mask]
 125   1        // [P0MASK - Port 0 Mask]$
 126   1      
 127   1        // $[P0MAT - Port 0 Match]
 128   1        // [P0MAT - Port 0 Match]$
 129   1      
 130   1      }
 131          
 132          //================================================================================
 133          // PORTS_1_enter_DefaultMode_from_RESET
 134          //================================================================================
 135          extern void
 136          PORTS_1_enter_DefaultMode_from_RESET (void)
 137          {
 138   1        // $[P1 - Port 1 Pin Latch]
 139   1        // [P1 - Port 1 Pin Latch]$
 140   1      
 141   1        // $[P1MDOUT - Port 1 Output Mode]
 142   1        /***********************************************************************
 143   1         - P1.0 output is open-drain
 144   1         - P1.1 output is open-drain
 145   1         - P1.2 output is open-drain
 146   1         - P1.3 output is open-drain
 147   1         - P1.4 output is push-pull
 148   1         - P1.5 output is push-pull
 149   1         - P1.6 output is open-drain
 150   1         - P1.7 output is open-drain
 151   1         ***********************************************************************/
 152   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 153   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__PUSH_PULL
 154   1            | P1MDOUT_B5__PUSH_PULL | P1MDOUT_B6__OPEN_DRAIN | P1MDOUT_B7__OPEN_DRAIN;
 155   1        // [P1MDOUT - Port 1 Output Mode]$
 156   1      
 157   1        // $[P1MDIN - Port 1 Input Mode]
 158   1        // [P1MDIN - Port 1 Input Mode]$
 159   1      
 160   1        // $[P1SKIP - Port 1 Skip]
 161   1        /***********************************************************************
 162   1         - P1.0 pin is skipped by the crossbar
 163   1         - P1.1 pin is skipped by the crossbar
 164   1         - P1.2 pin is skipped by the crossbar
 165   1         - P1.3 pin is skipped by the crossbar
 166   1         - P1.4 pin is not skipped by the crossbar
 167   1         - P1.5 pin is not skipped by the crossbar
 168   1         - P1.6 pin is not skipped by the crossbar
 169   1         - P1.7 pin is not skipped by the crossbar
 170   1         ***********************************************************************/
 171   1        P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 172   1            | P1SKIP_B3__SKIPPED | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/14/2022 19:42:30 PAGE 4   

 173   1            | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__NOT_SKIPPED;
 174   1        // [P1SKIP - Port 1 Skip]$
 175   1      
 176   1        // $[P1MASK - Port 1 Mask]
 177   1        // [P1MASK - Port 1 Mask]$
 178   1      
 179   1        // $[P1MAT - Port 1 Match]
 180   1        // [P1MAT - Port 1 Match]$
 181   1      
 182   1      }
 183          
 184          //================================================================================
 185          // PBCFG_0_enter_DefaultMode_from_RESET
 186          //================================================================================
 187          extern void
 188          PBCFG_0_enter_DefaultMode_from_RESET (void)
 189          {
 190   1        // $[XBR2 - Port I/O Crossbar 2]
 191   1        /***********************************************************************
 192   1         - Weak Pullups enabled 
 193   1         - Crossbar enabled
 194   1         ***********************************************************************/
 195   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 196   1        // [XBR2 - Port I/O Crossbar 2]$
 197   1      
 198   1        // $[PRTDRV - Port Drive Strength]
 199   1        // [PRTDRV - Port Drive Strength]$
 200   1      
 201   1        // $[XBR0 - Port I/O Crossbar 0]
 202   1        /***********************************************************************
 203   1         - UART TX, RX routed to Port pins P0.4 and P0.5
 204   1         - SPI I/O unavailable at Port pins
 205   1         - SMBus 0 I/O unavailable at Port pins
 206   1         - CP0 unavailable at Port pin
 207   1         - Asynchronous CP0 unavailable at Port pin
 208   1         - CP1 unavailable at Port pin
 209   1         - Asynchronous CP1 unavailable at Port pin
 210   1         - SYSCLK unavailable at Port pin
 211   1         ***********************************************************************/
 212   1        XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 213   1            | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 214   1            | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 215   1        // [XBR0 - Port I/O Crossbar 0]$
 216   1      
 217   1        // $[XBR1 - Port I/O Crossbar 1]
 218   1        /***********************************************************************
 219   1         - CEX0, CEX1 routed to Port pins
 220   1         - ECI unavailable at Port pin
 221   1         - T0 unavailable at Port pin
 222   1         - T1 unavailable at Port pin
 223   1         - T2 unavailable at Port pin
 224   1         ***********************************************************************/
 225   1        XBR1 = XBR1_PCA0ME__CEX0_CEX1 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 226   1            | XBR1_T1E__DISABLED | XBR1_T2E__DISABLED;
 227   1        // [XBR1 - Port I/O Crossbar 1]$
 228   1      
 229   1      }
 230          
 231          //================================================================================
 232          // CLOCK_0_enter_DefaultMode_from_RESET
 233          //================================================================================
 234          extern void
 235          CLOCK_0_enter_DefaultMode_from_RESET (void)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/14/2022 19:42:30 PAGE 5   

 236          {
 237   1        // $[CLKSEL - Clock Select]
 238   1        /***********************************************************************
 239   1         - Clock derived from the Internal High-Frequency Oscillator
 240   1         - SYSCLK is equal to selected clock source divided by 1
 241   1         ***********************************************************************/
 242   1        CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 243   1        // [CLKSEL - Clock Select]$
 244   1      
 245   1      }
 246          
 247          //================================================================================
 248          // PCA_0_enter_DefaultMode_from_RESET
 249          //================================================================================
 250          extern void
 251          PCA_0_enter_DefaultMode_from_RESET (void)
 252          {
 253   1        // $[PCA Off]
 254   1        PCA0CN0_CR = PCA0CN0_CR__STOP;
 255   1        // [PCA Off]$
 256   1      
 257   1        // $[PCA0MD - PCA Mode]
 258   1        /***********************************************************************
 259   1         - PCA continues to function normally while the system controller is in
 260   1         Idle Mode
 261   1         - Disable the CF interrupt
 262   1         - System clock
 263   1         ***********************************************************************/
 264   1        PCA0MD = PCA0MD_CIDL__NORMAL | PCA0MD_ECF__OVF_INT_DISABLED
 265   1            | PCA0MD_CPS__SYSCLK;
 266   1        // [PCA0MD - PCA Mode]$
 267   1      
 268   1        // $[PCA0CENT - PCA Center Alignment Enable]
 269   1        /***********************************************************************
 270   1         - Center-aligned
 271   1         - Center-aligned
 272   1         - Edge-aligned
 273   1         ***********************************************************************/
 274   1        PCA0CENT = PCA0CENT_CEX0CEN__CENTER | PCA0CENT_CEX1CEN__CENTER
 275   1            | PCA0CENT_CEX2CEN__EDGE;
 276   1        // [PCA0CENT - PCA Center Alignment Enable]$
 277   1      
 278   1        // $[PCA0CLR - PCA Comparator Clear Control]
 279   1        // [PCA0CLR - PCA Comparator Clear Control]$
 280   1      
 281   1        // $[PCA0L - PCA Counter/Timer Low Byte]
 282   1        // [PCA0L - PCA Counter/Timer Low Byte]$
 283   1      
 284   1        // $[PCA0H - PCA Counter/Timer High Byte]
 285   1        // [PCA0H - PCA Counter/Timer High Byte]$
 286   1      
 287   1        // $[PCA0POL - PCA Output Polarity]
 288   1        // [PCA0POL - PCA Output Polarity]$
 289   1      
 290   1        // $[PCA0PWM - PCA PWM Configuration]
 291   1        // [PCA0PWM - PCA PWM Configuration]$
 292   1      
 293   1        // $[PCA On]
 294   1        PCA0CN0_CR = PCA0CN0_CR__RUN;
 295   1        // [PCA On]$
 296   1      
 297   1      }
 298          
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/14/2022 19:42:30 PAGE 6   

 299          //================================================================================
 300          // PCACH_0_enter_DefaultMode_from_RESET
 301          //================================================================================
 302          extern void
 303          PCACH_0_enter_DefaultMode_from_RESET (void)
 304          {
 305   1        // $[PCA0 Settings Save]
 306   1        // Select Capture/Compare register)
 307   1        PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 308   1        // [PCA0 Settings Save]$
 309   1      
 310   1        // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 311   1        /***********************************************************************
 312   1         - Disable negative edge capture
 313   1         - Disable CCF0 interrupts
 314   1         - Disable match function
 315   1         - 8 to 11-bit PWM selected
 316   1         - Disable positive edge capture
 317   1         - Enable comparator function
 318   1         - Enable PWM function
 319   1         - Disable toggle function
 320   1         ***********************************************************************/
 321   1        PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 322   1            | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT | PCA0CPM0_CAPP__DISABLED
 323   1            | PCA0CPM0_ECOM__ENABLED | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 324   1        // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 325   1      
 326   1        // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 327   1        /***********************************************************************
 328   1         - PCA Channel 0 Capture Module Low Byte = 0x80
 329   1         ***********************************************************************/
 330   1        PCA0CPL0 = (0x80 << PCA0CPL0_PCA0CPL0__SHIFT);
 331   1        // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 332   1      
 333   1        // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 334   1        /***********************************************************************
 335   1         - PCA Channel 0 Capture Module High Byte = 0x80
 336   1         ***********************************************************************/
 337   1        PCA0CPH0 = (0x80 << PCA0CPH0_PCA0CPH0__SHIFT);
 338   1        // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 339   1      
 340   1        // $[Auto-reload]
 341   1        // [Auto-reload]$
 342   1      
 343   1        // $[PCA0 Settings Restore]
 344   1        // [PCA0 Settings Restore]$
 345   1      
 346   1      }
 347          
 348          //================================================================================
 349          // PCACH_1_enter_DefaultMode_from_RESET
 350          //================================================================================
 351          extern void
 352          PCACH_1_enter_DefaultMode_from_RESET (void)
 353          {
 354   1        // $[PCA0 Settings Save]
 355   1        // Select Capture/Compare register)
 356   1        PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 357   1        // [PCA0 Settings Save]$
 358   1      
 359   1        // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 360   1        /***********************************************************************
 361   1         - Disable negative edge capture
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/14/2022 19:42:30 PAGE 7   

 362   1         - Disable CCF1 interrupts
 363   1         - Disable match function
 364   1         - 8 to 11-bit PWM selected
 365   1         - Disable positive edge capture
 366   1         - Enable comparator function
 367   1         - Enable PWM function
 368   1         - Disable toggle function
 369   1         ***********************************************************************/
 370   1        PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 371   1            | PCA0CPM1_MAT__DISABLED | PCA0CPM1_PWM16__8_BIT | PCA0CPM1_CAPP__DISABLED
 372   1            | PCA0CPM1_ECOM__ENABLED | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 373   1        // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 374   1      
 375   1        // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 376   1        /***********************************************************************
 377   1         - PCA Channel 1 Capture Module Low Byte = 0xFF
 378   1         ***********************************************************************/
 379   1        PCA0CPL1 = (0xFF << PCA0CPL1_PCA0CPL1__SHIFT);
 380   1        // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 381   1      
 382   1        // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 383   1        /***********************************************************************
 384   1         - PCA Channel 1 Capture Module High Byte = 0xFF
 385   1         ***********************************************************************/
 386   1        PCA0CPH1 = (0xFF << PCA0CPH1_PCA0CPH1__SHIFT);
 387   1        // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 388   1      
 389   1        // $[Auto-reload]
 390   1        // [Auto-reload]$
 391   1      
 392   1        // $[PCA0 Settings Restore]
 393   1        // [PCA0 Settings Restore]$
 394   1      
 395   1      }
 396          
 397          extern void
 398          SPI_0_enter_DefaultMode_from_RESET (void)
 399          {
 400   1        // $[SPI0CKR - SPI0 Clock Rate]
 401   1        /***********************************************************************
 402   1         - SPI0 Clock Rate = 0x17
 403   1         ***********************************************************************/
 404   1        SPI0CKR = (0x17 << SPI0CKR_SPI0CKR__SHIFT);
 405   1        // [SPI0CKR - SPI0 Clock Rate]$
 406   1      
 407   1        // $[SPI0CFG - SPI0 Configuration]
 408   1        // [SPI0CFG - SPI0 Configuration]$
 409   1      
 410   1        // $[SPI0CN0 - SPI0 Control]
 411   1        /***********************************************************************
 412   1         - Enable the SPI module
 413   1         ***********************************************************************/
 414   1        SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 415   1        // [SPI0CN0 - SPI0 Control]$
 416   1      
 417   1      }
 418          
 419          //================================================================================
 420          // INTERRUPT_0_enter_DefaultMode_from_RESET
 421          //================================================================================
 422          extern void
 423          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 424          {
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/14/2022 19:42:30 PAGE 8   

 425   1      
 426   1        // $[EIE1 - Extended Interrupt Enable 1]
 427   1        // [EIE1 - Extended Interrupt Enable 1]$
 428   1      
 429   1        // $[EIP1 - Extended Interrupt Priority 1]
 430   1        // [EIP1 - Extended Interrupt Priority 1]$
 431   1      
 432   1        // $[IE - Interrupt Enable]
 433   1        /***********************************************************************
 434   1         - Disable all interrupt sources
 435   1         - Disable external interrupt 0
 436   1         - Disable external interrupt 1
 437   1         - Enable interrupt requests generated by SPI0
 438   1         - Disable all Timer 0 interrupt
 439   1         - Disable all Timer 1 interrupt
 440   1         - Disable Timer 2 interrupt
 441   1         - Enable UART0 interrupt
 442   1         ***********************************************************************/
 443   1        IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__ENABLED
 444   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__DISABLED
 445   1            | IE_ES0__ENABLED;
 446   1        // [IE - Interrupt Enable]$
 447   1      
 448   1        // $[IP - Interrupt Priority]
 449   1        // [IP - Interrupt Priority]$
 450   1      
 451   1      }
 452          
 453          //================================================================================
 454          // TIMER01_0_enter_DefaultMode_from_RESET
 455          //================================================================================
 456          extern void
 457          TIMER01_0_enter_DefaultMode_from_RESET (void)
 458          {
 459   1        // $[Timer Initialization]
 460   1        //Save Timer Configuration
 461   1        uint8_t TCON_save;
 462   1        TCON_save = TCON;
 463   1        //Stop Timers
 464   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 465   1      
 466   1        // [Timer Initialization]$
 467   1      
 468   1        // $[TH0 - Timer 0 High Byte]
 469   1        // [TH0 - Timer 0 High Byte]$
 470   1      
 471   1        // $[TL0 - Timer 0 Low Byte]
 472   1        // [TL0 - Timer 0 Low Byte]$
 473   1      
 474   1        // $[TH1 - Timer 1 High Byte]
 475   1        /***********************************************************************
 476   1         - Timer 1 High Byte = 0x96
 477   1         ***********************************************************************/
 478   1        TH1 = (0x96 << TH1_TH1__SHIFT);
 479   1        // [TH1 - Timer 1 High Byte]$
 480   1      
 481   1        // $[TL1 - Timer 1 Low Byte]
 482   1        // [TL1 - Timer 1 Low Byte]$
 483   1      
 484   1        // $[Timer Restoration]
 485   1        //Restore Timer Configuration
 486   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 487   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/14/2022 19:42:30 PAGE 9   

 488   1        // [Timer Restoration]$
 489   1      
 490   1      }
 491          
 492          extern void
 493          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 494          {
 495   1        // $[CKCON0 - Clock Control 0]
 496   1        /***********************************************************************
 497   1         - System clock divided by 12
 498   1         - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 499   1         - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 500   1         - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 501   1         - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 502   1         - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 503   1         - Timer 1 uses the system clock
 504   1         ***********************************************************************/
 505   1        CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 506   1            | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 507   1            | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 508   1            | CKCON0_T1M__SYSCLK;
 509   1        // [CKCON0 - Clock Control 0]$
 510   1      
 511   1        // $[TMOD - Timer 0/1 Mode]
 512   1        /***********************************************************************
 513   1         - Mode 0, 13-bit Counter/Timer
 514   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 515   1         - Timer Mode
 516   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 517   1         - Timer Mode
 518   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 519   1         ***********************************************************************/
 520   1        TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 521   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 522   1        // [TMOD - Timer 0/1 Mode]$
 523   1      
 524   1        // $[TCON - Timer 0/1 Control]
 525   1        /***********************************************************************
 526   1         - Start Timer 1 running
 527   1         ***********************************************************************/
 528   1        TCON |= TCON_TR1__RUN;
 529   1        // [TCON - Timer 0/1 Control]$
 530   1      
 531   1      }
 532          
 533          extern void
 534          UART_0_enter_DefaultMode_from_RESET (void)
 535          {
 536   1        // $[SCON0 - UART0 Serial Port Control]
 537   1        /***********************************************************************
 538   1         - UART0 reception enabled
 539   1         ***********************************************************************/
 540   1        SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 541   1        // [SCON0 - UART0 Serial Port Control]$
 542   1      
 543   1      }
 544          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    218    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/14/2022 19:42:30 PAGE 10  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
